package main

import "fmt"

func main() {
	set1 := []int{9, 1, 3, 5, 5, 7, 7}
	set2 := []int{0, 1, 2, 3, 3, 4, 11, 12, 7}
	new_set := make([]int, 0)

	m := make(map[int]int)

	/*
		для удобства структурируем данные одного из массивов в виде карты, где
		единица будет обозначать то, что элемент присутствует в этом мн-ве.
		Так же, мы уберем повторяющиеся элементы этого массива таким способом,
		потому что все ключи в мапе должны быть уникальны
	*/
	for _, value := range set1 {
		m[value] = 1
	}
	fmt.Println(m)
	/*
		проходимся теперь по всем элементам 2-го массива и сравниваем с элементами мапы.
		Если нашли совпадение, то меняем значение по соотвующему ключу и добавляем этот
		элемент в наше новое мн-во пересечений. Если нашли совпадающие элементы, но значение
		не равно единице, это означаем, что такое пересечение уже было найдено.
	*/
	for _, value_set2 := range set2 {
		for key, map_val := range m {
			if key == value_set2 && map_val == 1 {
				new_set = append(new_set, key)
				m[key] = 2
				break
			}
		}
	}
	fmt.Println(new_set)
}
